import pandas as pd
from pgmpy.models import BayesianModel
from pgmpy.estimators import ParameterEstimator
from pgmpy.inference import VariableElimination
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

# Step 1: Load the heart disease dataset
dataset_path = 'your_dataset.csv'  # Replace with the actual path to your dataset
data = pd.read_csv(dataset_path)

# Step 2: Split the dataset into training and testing sets
train_data, test_data = train_test_split(data, test_size=0.2, random_state=42)

# Step 3: Define the Bayesian Network structure
model = BayesianModel([('age', 'trestbps'), ('age', 'chol'), ('sex', 'trestbps'), ('sex', 'chol'),
                        ('fbs', 'trestbps'), ('restecg', 'thalach'), ('thalach', 'target'), 
                        ('exang', 'thalach'), ('cp', 'target'), ('target', 'slope'), ('target', 'ca'),
                        ('target', 'thal'), ('oldpeak', 'target')])

# Step 4: Use Maximum Likelihood Estimation to estimate the parameters
model.fit(train_data, estimator=ParameterEstimator)

# Step 5: Make predictions using Variable Elimination
inference = VariableElimination(model)

# Step 6: Predict on the test set
predicted_values = []
for index, row in test_data.iterrows():
    query = inference.map_query(variables=['target'], evidence=row.drop('target').to_dict())
    predicted_values.append(query['target'])

# Step 7: Evaluate the model
true_values = test_data['target'].values
accuracy = accuracy_score(true_values, predicted_values)
classification_report_result = classification_report(true_values, predicted_values)

# Step 8: Display the results
print(f"Accuracy: {accuracy}")
print("Classification Report:")
print(classification_report_result)
